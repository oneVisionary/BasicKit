

## 🐍 Python Beginner’s Toolkit — Project Blueprint



### ✅ 1. **To-Do List Manager**

* **Goal**: Add, edit, delete, and view tasks.
* **Concepts Covered**:

  * Lists and dictionaries
  * Functions and modular design
  * File I/O with JSON
  * Basic CRUD logic
  * Exception handling (`try-except`)
  * Data persistence

---

### ✅ 2. **Password Generator**

* **Goal**: Generate secure passwords with rules.
* **Concepts Covered**:

  * String manipulation
  * Loops and conditionals
  * Random module usage (`random.choice`, `shuffle`)
  * Input validation
  * Customizable password policies

---

### ✅ 3. **Unit Converter Tool**

* **Goal**: Convert between units (e.g., km → miles).
* **Concepts Covered**:

  * Functions and reusability
  * Math operations
  * Dictionaries for conversion logic
  * Menu system with user input
  * Float rounding and formatting

---

### ✅ 4. **Expense Tracker**

* **Goal**: Track daily expenses, categorize, and total them.
* **Concepts Covered**:

  * Lists, tuples, dictionaries
  * CSV file handling (`csv` module)
  * Date/time operations (`datetime`)
  * Summation and filtering
  * Simple reports / aggregations

---

### ✅ 5. **Simple Calculator with History**

* **Goal**: Perform basic math operations, store history.
* **Concepts Covered**:

  * Arithmetic operations
  * `eval()` with safety handling
  * While loop / CLI menu
  * Storing operation history in memory (list) or file
  * Error handling (zero division, invalid input)

---

### ✅ 6. **Weather CLI App (API-Based)**

* **Goal**: Get live weather data by city.
* **Concepts Covered**:

  * API requests with `requests` module
  * JSON parsing
  * Working with dictionaries and nested data
  * String formatting and output styling
  * Exception handling (network, API errors)

---

### ✅ 7. **Currency Converter**

* **Goal**: Convert currencies using real-time rates.
* **Concepts Covered**:

  * REST API integration
  * Float precision and formatting
  * User input and validation
  * Currency symbol handling
  * Modular functions

---

### ✅ 8. **CSV ↔ JSON File Converter**

* **Goal**: Convert between CSV and JSON formats.
* **Concepts Covered**:

  * File handling
  * CSV module (`csv.DictReader`, `DictWriter`)
  * JSON module usage
  * Data structures transformation (list ↔ dict)
  * CLI file browser / filename handling

---

### ✅ 9. **News Headlines Fetcher**

* **Goal**: Pull latest headlines from a news API.
* **Concepts Covered**:

  * REST API (GET request)
  * Loop through JSON data
  * API key management (env or config file)
  * Text formatting and output cleanup
  * User input for category/search

---

### ✅ 10. **Dice Roller or Number Guessing Game**

* **Goal**: Fun game using random logic.
* **Concepts Covered**:

  * Random module usage
  * Loop and game logic
  * Conditional branching
  * User interaction design
  * Replay and exit logic

---

## 🧠 Bonus Python Topics Covered Throughout the App:

| Skill                       | Where it's Covered                                              |
| --------------------------- | --------------------------------------------------------------- |
| **OOP Basics**              | Use in To-Do Manager or Expense Tracker (task/expense as class) |
| **File I/O**                | To-Do List, Expense Tracker, File Converter                     |
| **Modules & Imports**       | All modules structured cleanly                                  |
| **Functions**               | Each project designed functionally                              |
| **Error Handling**          | Calculator, APIs, File Converter                                |
| **Data Types**              | Used everywhere (list, dict, str, tuple)                        |
| **String Manipulation**     | Password generator, News, Weather                               |
| **External Libraries**      | `requests`, `csv`, `json`, `random`, optionally `rich`          |
| **User Input & Validation** | All projects                                                    |
| **Project Organization**    | Foldered structure, reusable helpers                            |

---

## 🧱 Folder Structure Recommendation:

```
python_toolkit/
├── main.py
├── modules/
│   ├── todo.py
│   ├── password_generator.py
│   ├── unit_converter.py
│   ├── expense_tracker.py
│   ├── calculator.py
│   ├── weather_app.py
│   ├── currency_converter.py
│   ├── file_converter.py
│   ├── news_fetcher.py
│   └── dice_game.py
├── utils/
│   ├── file_utils.py
│   └── api_utils.py
├── data/
│   ├── todos.json
│   ├── expenses.csv
├── README.md
```

